- var select2               = true;
- var page_select2          = true;
- var sidebar_open          = true;
- var sweetalert2           = true;
- var err_handling          = true;
- var pe7_icon              = true;
- var datatable             = true;
- var page_datatable        = true;
- var popover_custom        = true;
- var form_wizard_three     = true;

doctype html
html(lang='en')
    include ../../components/header-files
    //pincodeInput
    link(rel='stylesheet', type='text/css', href='../../assets/css/bootstrap-pincode-input.css')
    body
        include ../../components/loader
        // page-wrapper Start
        .page-wrapper
            include ../../components/header
            // Page Body Start
            .page-body-wrapper
                include ../../components/sidebar
                .page-body
                    .container-fluid
                        .page-header
                            .row
                                .col-lg-6.main-header
                                    h2
                                      | Users
                                    h6.mb-0 Manage users
                                .col-lg-6.breadcrumb-right      
                                    ol.breadcrumb
                                      li.breadcrumb-item
                                        a(href='/users/management')
                                         i.pe-7s-home
                                      li.breadcrumb-item.active users
                    // Container-fluid starts
                    .container-fluid
                      .row
                        .col-sm-12
                            .card
                              .card-header
                                h5 Add New User
                              .card-body
                                form.f1(method='POST' action='/utils/user-add')
                                  .f1-steps
                                    .f1-progress
                                      .f1-progress-line(data-now-value='16.66', data-number-of-steps='3')
                                    .f1-step.active
                                      .f1-step-icon
                                        i.fa.fa-user
                                      p General Informations
                                    .f1-step
                                      .f1-step-icon
                                        i.fa.fa-key
                                      p System Informations
                                    .f1-step
                                      .f1-step-icon
                                        i.fa.fa-users
                                      p Optional Groups
                                  fieldset
                                    .form-group
                                      label(for='f1-first-name') First Name:
                                      input#f1-first-name.form-control(type='text', name='name', placeholder='Name...', required)
                                    .form-group
                                      label(for='f1-last-name') Last name:
                                      input#f1-last-name.f1-last-name.form-control(type='text', name='surname', placeholder='Surname...', required)
                                    .f1-buttons
                                      button.btn.btn-primary.btn-next(type='button') Next
                                  fieldset
                                    .row
                                        .col-sm-8
                                            .form-group
                                              label(for='f1-uid') Mail UID:
                                              input#f1-uid.form-control(type='text', placeholder="UID..."  name='uid' required)
                                            .form-group.m-form__group
                                              label Domain:
                                              .input-group
                                                .input-group-prepend
                                                  span.input-group-text @
                                                input.form-control(type='text', placeholder='E-mail Domain...' name='domain' required)
                                            .form-group
                                                label(for='f1-role') MAICS Role:
                                                select#f1-role.js-example-basic-single(name="user_role" required style="width: 100%;")
                                                    option(value="" selected="selected" disabled) Select a Role
                                                    option(value="admin") Admin
                                                    option(value="technician") Technician
                                                    option(value="user") User
                                        .col-sm-4
                                          br
                                          .card
                                               .card-body
                                                h6 MFA:
                                                .row.switch-showcase.height-equal
                                                  .col-sm-12
                                                    .media
                                                      label.col-form-label.m-r-10 Google Authenticator
                                                      .media-body.text-right.icon-state
                                                        label.switch
                                                          input.checkbox(type='checkbox' name="otp_enabled")
                                                          span.switch-state
                                                    .media
                                                      label.col-form-label.m-r-10 Yubikey
                                                      .media-body.text-right.icon-state
                                                        label.switch
                                                          input.checkbox(type='checkbox', checked='' name="token_enabled")
                                                          span.switch-state
                                    .f1-buttons
                                      button.btn.btn-primary.btn-previous(type='button') Previous
                                      | &nbsp;
                                      button.btn.btn-primary.btn-next(type='button') Next
                                  
                                  fieldset
                                     .form-group.select2-drpdwn
                                         label(for='f1-groups') Add user to groups:
                                         select.js-adduser-multiple(name="user_groups" style="width: 100%;" multiple='multiple' required)
                                             option(value="none") None
                                             if groups
                                                 each val in groups
                                                     option(value=val.name)=val.name
                                     .f1-buttons
                                         button.btn.btn-primary.btn-previous(type='button') Previous
                                         | &nbsp;
                                         button.btn.btn-primary
                                             i.fa.fa-plus 
                                             | &nbsp; Add User
                                  
                            .card
                                .card-header
                                    h5.card-title Users list
                                .card-body
                                        .table-responsive
                                                table#basic-1.display
                                                    thead
                                                        tr
                                                            th Name
                                                            th MAICS Role
                                                            th Email
                                                            th Group
                                                            th Password Changed Time
                                                            th Lock
                                                            th Key Stat
                                                            th Act.
                                                    tbody
                                                        if users
                                                            each u in users
                                                                tr
                                                                    td=u.name +" "+ u.surname
                                                                    td=u.role
                                                                    td=u.email
                                                                    td=u.group
                                                                    td=u.pwdChangedTime
                                                                    
                                                                    //lock status
                                                                    if u.pwdAccountLockedTime
                                                                        td(style="width:  2%").mx-auto
                                                                            button.btn.btn-warning(type='button' title='' data-container='body' data-toggle='popover' data-placement='left' data-content='User is locked. Locked occurred in ts: '+u.pwdAccountLockedTime+'. click to unclock' data-original-title='Locked' onclick="location.href='/utils/user-unlock?sys_username=" + u.sys_username + "&email="+ u.email +"'")
                                                                                i.fa.fa-lock
                                                                    else
                                                                        td(style="width:  2%").mx-auto
                                                                            button.btn.btn-success(type='button' title='' data-container='body' data-toggle='popover' data-placement='left' data-content='User is not locked. click to lock' data-original-title='Unlocked' onclick="location.href='/utils/user-lock?sys_username=" + u.sys_username + "&email="+ u.email +"'")
                                                                                i.fa.fa-unlock
                                                                    
                                                                    //key status
                                                                    if u.sshPublicKey 
                                                                        td(style="width:  2%").mx-auto
                                                                            button.example-popover.btn.btn-success(type='button', data-toggle='popover', data-placement='left', title='' data-content=u.sshPublicKey, data-original-title='SSH User key')
                                                                                i.fa.fa-check-circle
                                                                    else
                                                                        td(style="width:  2%").mx-auto
                                                                            button.example-popover.btn.btn-warning(type='button', data-toggle='popover', data-placement='left', title=''  data-content='please, ask user to load ssh key', data-original-title='SSH Key not loaded')
                                                                                i.fa.fa-times-circle
                                                                    //password expired  
                                                                    td(style="width:  2%;")
                                                                        div.dropdown.dropleft
                                                                            button.dropbtn.btn-danger(type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false") 
                                                                                i.fa.fa-cog.dropdown-toggle-split
                                                                            div.dropdown-menu(aria-labelledby="dropdownMenuButton")
                                                                                h6.dropdown-header Account Actions
                                                                                div.dropdown-divider
                                                                                if u.role == "admin" || u.role=="technician"
                                                                                    if u.sshPublicKey
                                                                                        button.dropdown-item.btn.btn-light.txt-dark(onclick="location.href='/utils/user-delete-key?sys_username=" + u.sys_username + "&email="+ u.email +"'" style="border-radius: 0px;") Delete SSH public key
                                                                                    if u.otp_secret
                                                                                        button.dropdown-item.btn.btn-light.txt-dark(onclick="confirm_delete_otp_secret('" + u.sys_username +"');" style="border-radius: 0px;") Delete OTP secret
                                                                                    if u.token_publicKey
                                                                                        button.dropdown-item.btn.btn-light.txt-dark(onclick="confirm_delete_token_secret('" + u.sys_username +"');" style="border-radius: 0px;") Delete Token secret
                                                                                    button.dropdown-item.btn.btn-light.txt-dark(onclick="change_mfa_mode('" + u.sys_username +"',"+u.token_enabled+","+u.otp_enabled+");" style="border-radius: 0px;") Change MFA mode
                                                                                button.dropdown-item.btn.btn-danger(onclick="confirm_delete_user('"+u.sys_username+"');" style="border-radius: 0px;") Delete User
                                                   
                                                    
                            
                    // Container-fluid Ends
                include ../../components/footer
        include ../../components/footer-files
        script(type='text/javascript').
            function confirm_delete_user(sys_username)
            {
                Swal.fire({
                      title: 'Are you sure?',
                      text: "You won't be able to revert this!",
                      icon: 'warning',
                      showCancelButton: true,
                      confirmButtonColor: '#3085d6',
                      cancelButtonColor: '#d33',
                      confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                  if (result.value) {
                      var form = $(`<form action="/utils/user-delete" method="post">` +
                                    `<input type="hidden" name="sys_username" value="`+sys_username+`"></form>`);
                      $('body').append(form);
                      form.submit();
                  }
                  else if (result.dismiss === Swal.DismissReason.cancel) {
                    Swal.fire({
                        title: 'Canceled',
                        text: "User elimination aborted.",
                        icon: 'success',
                        timer: 1000,
                        timerProgressBar: true
                      })
                  }
                })
            }
            
            function confirm_delete_token_secret(sys_username)
            {
                Swal.fire({
                      title: 'Are you sure?',
                      text: "If you delete the token secret, user's SSH public key will be removed!",
                      icon: 'warning',
                      showCancelButton: true,
                      confirmButtonColor: '#3085d6',
                      cancelButtonColor: '#d33',
                      confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                  if (result.value) {
                      var form = $(`<form action="/utils/user-delete-token-secret" method="post">` +
                                    `<input type="hidden" name="sys_username" value="`+sys_username+`"></form>`);
                      $('body').append(form);
                      form.submit();
                  }
                  else if (result.dismiss === Swal.DismissReason.cancel) {
                    Swal.fire({
                        title: 'Canceled',
                        text: "token secret elimination aborted.",
                        icon: 'success',
                        timer: 1000,
                        timerProgressBar: true
                      })
                  }
                })
            }
            
            function confirm_delete_otp_secret(sys_username)
            {
                Swal.fire({
                      title: 'Are you sure?',
                      text: "If you delete the OTP secret, user's SSH public key will be removed!",
                      icon: 'warning',
                      showCancelButton: true,
                      confirmButtonColor: '#3085d6',
                      cancelButtonColor: '#d33',
                      confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                  if (result.value) {
                      var form = $(`<form action="/utils/user-delete-otp-secret" method="post">` +
                                    `<input type="hidden" name="sys_username" value="`+sys_username+`"></form>`);
                      $('body').append(form);
                      form.submit();
                  }
                  else if (result.dismiss === Swal.DismissReason.cancel) {
                    Swal.fire({
                        title: 'Canceled',
                        text: "OTP secret elimination aborted.",
                        icon: 'success',
                        timer: 1000,
                        timerProgressBar: true
                      })
                  }
                })
            }
            
            function change_mfa_mode(sys_username, token_enabled, otp_enabled)
            {
                //change value from true/false to checked
                var token_enabled_checked = "";
                var otp_enabled_checked = "";
                if (token_enabled){
                    token_enabled_checked = "checked";
                }
                if(otp_enabled){
                    otp_enabled_checked = "checked";
                }

                Swal.fire({
                  title: 'Change Multi-factor authentication setup for '+ sys_username,
                  html: `<p> Note that if you change Multi-factor authentication setup SSH publickey stored in the system will be removed and user will need to enroll SSH key again. <\p>
                            <div class="card-body">
                            <h6>Shell Mode:</h6>
                            <div class="row switch-showcase height-equal">
                                <div class="col-sm-12">
                                    <div class="media">
                                    <label class="col-form-label m-r-10">Google Authenticator</label>
                                    <div class="media-body text-right icon-state">
                                    <label class="switch">
                                        <input class="checkbox" type="checkbox" id="new_otp_enabled" name="new_otp_enabled" `+otp_enabled_checked+`><span class="switch-state"></span>
                                    </label>
                                </div>
                            </div>
                            <div class="media">
                                <label class="col-form-label m-r-10">Yubikey</label>
                                <div class="media-body text-right icon-state">
                                    <label class="switch">
                                        <input class="checkbox" type="checkbox" id="new_token_enabled" name="new_token_enabled" `+token_enabled_checked+`><span class="switch-state"></span>
                                    </label>
                                </div>
                            </div>
                            </div></div></div>`,
                  showCancelButton: true,
                  confirmButtonText: 'Change MFA Mode',
                  focusConfirm: false,
                  preConfirm: () => {
                      
                    const new_otp_enabled_value = Swal.getPopup().querySelector('#new_otp_enabled').checked
                    const new_token_enabled_value = Swal.getPopup().querySelector('#new_token_enabled').checked
                    
                    validation_arr = [new_otp_enabled_value,new_token_enabled_value];
                    on_count = validation_arr.filter(function(value){
                        return value === true;
                    }).length 
                    if (on_count == 0) {
                        Swal.showValidationMessage(`At least one additional authentication factor must be selected`)
                    }

                    return { new_otp_enabled: new_otp_enabled_value, new_token_enabled: new_token_enabled_value }
                  }
                }).then((result) => {
                    if (result.value) {
                        
                        console.log(otp_enabled);
                        console.log(result.value.new_otp_enabled);
                        console.log(token_enabled);
                        console.log(result.value.new_token_enabled);
                        
                        if (result.value.new_otp_enabled == otp_enabled && token_enabled == result.value.new_token_enabled){
                            Swal.fire({
                                title: 'Canceled',
                                text: "No configuration changes detected.",
                                icon: 'success',
                                timer: 1000,
                                timerProgressBar: true
                              })
                        }
                        else{
                            var form = $(`<form action="/utils/user-change-mfa-mode" method="post">` +
                                          `<input type="hidden" name="sys_username" value="`+sys_username+`">` +
                                          `<input type="hidden" name="otp_enabled" value=`+result.value.new_otp_enabled+`>` +
                                          `<input type="hidden" name="token_enabled" value=`+result.value.new_token_enabled+`></form>`);
                            $('body').append(form);
                            form.submit();
                        }

                    }
                    else if (result.dismiss === Swal.DismissReason.cancel) {
                      Swal.fire({
                          title: 'Canceled',
                          text: "aborted.",
                          icon: 'success',
                          timer: 1000,
                          timerProgressBar: true
                        })
                    }
                })
            }

            
    
